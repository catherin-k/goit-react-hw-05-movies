{"version":3,"file":"static/js/415.a844f336.chunk.js","mappings":"yMAEaA,E,QAAOC,GAAAA,GAAH,2CACJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,M,SC0BhC,EAzB2B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACP,EAAD,UACGK,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFID,U,6GCmBjB,UAzBa,WACX,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeU,EAAf,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAE8BC,EAAAA,EAAAA,MAF9B,gBAEYC,EAFZ,EAEYA,QAERH,EAAUG,GAJd,gDAMIC,QAAQC,IAAI,KAAMC,SANtB,0DADc,uBAAC,WAAD,wBAWdC,KACC,KAGD,iCACE,4CACA,SAAC,IAAD,CAAoBjB,OAAQA,S,0MChB3B,SAAeY,IAAtB,+B,aAAO,O,oBAAA,oGACaM,IAAAA,IAAU,uBADvB,cACCC,EADD,yBAGEA,EAAIC,MAHN,kEAMA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAgCC,GAAhC,uFACaJ,IAAAA,IAAA,6BAAgCI,IAD7C,cACCH,EADD,yBAGEA,EAAIC,MAHN,kEAOA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAA4BC,GAA5B,uFACaN,IAAAA,IAAA,iBAAoBM,IADjC,cACCL,EADD,yBAGEA,EAAIC,MAHN,kEAMA,SAAeK,EAAtB,kC,aAAO,O,oBAAA,WAA+BD,GAA/B,uFACaN,IAAAA,IAAA,iBAAoBM,EAApB,aADb,cACCL,EADD,yBAGEA,EAAIC,MAHN,kEAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA8BF,GAA9B,uFACaN,IAAAA,IAAA,iBAAoBM,EAApB,aADb,cACCL,EADD,yBAGEA,EAAIC,MAHN,kEA/BPF,IAAAA,SAAAA,QAAyB,gCACzBA,IAAAA,SAAAA,OAAwB,CACtBS,QAHU","sources":["components/moviesList/MoviesList.styled.js","components/moviesList/MoviesList.jsx","pages/Home.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: ${p => p.theme.space[5]}px;\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { List } from './MoviesList.styled';\n\nconst TrendingMoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nTrendingMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n    }).isRequired\n  ),\n};\n\nexport default TrendingMoviesList;\n","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from '../service/api';\nimport TrendingMoviesList from '../components/moviesList/MoviesList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function fetchTrendingMovies() {\n      try {\n        const { results } = await getTrendingMovies();\n\n        setMovies(results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      <h2>Trending today</h2>\n      <TrendingMoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst KEY = '47bf952bf58b26c55c9961725433383a';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: KEY,\n};\n// Trending movies list\nexport async function getTrendingMovies() {\n  const res = await axios.get('/trending/movie/day');\n\n  return res.data;\n}\n// Movies list by search query\nexport async function getMoviesByQuery(query) {\n  const res = await axios.get(`search/movie?query=${query}`);\n\n  return res.data;\n}\n\n// Movie by id\nexport async function getMovieById(movieId) {\n  const res = await axios.get(`/movie/${movieId}`);\n\n  return res.data;\n}\n// get cast list\nexport async function getCastListById(movieId) {\n  const res = await axios.get(`/movie/${movieId}/credits`);\n\n  return res.data;\n}\n\n// get reviews\nexport async function getReviewsById(movieId) {\n  const res = await axios.get(`/movie/${movieId}/reviews`);\n\n  return res.data;\n}\n"],"names":["List","styled","p","theme","space","movies","location","useLocation","map","id","title","to","state","from","useState","setMovies","useEffect","getTrendingMovies","results","console","log","message","fetchTrendingMovies","axios","res","data","getMoviesByQuery","query","getMovieById","movieId","getCastListById","getReviewsById","api_key"],"sourceRoot":""}