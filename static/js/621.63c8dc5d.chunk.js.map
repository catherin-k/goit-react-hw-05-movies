{"version":3,"file":"static/js/621.63c8dc5d.chunk.js","mappings":"qRAEaA,EAAOC,EAAAA,GAAAA,GAAH,2CACJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MAGnBC,EAAOJ,EAAAA,GAAAA,GAAH,oEACE,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MACzB,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MAEnBE,EAAQL,EAAAA,GAAAA,GAAH,mDACC,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,M,SC8BtC,EApCgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,IAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAAgCL,GAAhC,iGAEuBM,EAAAA,EAAAA,IAAeN,GAFtC,OAEUO,EAFV,OAGIH,EAAWG,EAAKC,SAHpB,gDAKI,KAAMC,QAAQ,uBALlB,yDADc,yBAAC,SAAD,2BAUdC,CAAiBV,KAChB,CAACA,IAECG,EAGL,OAA0B,IAAnBA,EAAQQ,QACb,qEAEA,SAAClB,EAAD,UACGU,EAAQS,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC/B,OACE,UAACjB,EAAD,YACE,UAACC,EAAD,sBAAgBc,MAChB,uBAAIC,MAFKC,U,0MCvBd,SAAeC,IAAtB,+B,aAAO,O,oBAAA,oGACaC,IAAAA,IAAU,uBADvB,cACCC,EADD,yBAGEA,EAAIX,MAHN,kEAMA,SAAeY,EAAtB,kC,aAAO,O,oBAAA,WAAgCC,GAAhC,uFACaH,IAAAA,IAAA,6BAAgCG,IAD7C,cACCF,EADD,yBAGEA,EAAIX,MAHN,kEAOA,SAAec,EAAtB,kC,aAAO,O,oBAAA,WAA4BrB,GAA5B,uFACaiB,IAAAA,IAAA,iBAAoBjB,IADjC,cACCkB,EADD,yBAGEA,EAAIX,MAHN,kEAMA,SAAee,EAAtB,kC,aAAO,O,oBAAA,WAA+BtB,GAA/B,uFACaiB,IAAAA,IAAA,iBAAoBjB,EAApB,aADb,cACCkB,EADD,yBAGEA,EAAIX,MAHN,kEAOA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAA8BN,GAA9B,uFACaiB,IAAAA,IAAA,iBAAoBjB,EAApB,aADb,cACCkB,EADD,yBAGEA,EAAIX,MAHN,kEA/BPU,IAAAA,SAAAA,QAAyB,gCACzBA,IAAAA,SAAAA,OAAwB,CACtBM,QAHU","sources":["components/reviews/Reviews.styled.js","components/reviews/Reviews.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: ${p => p.theme.space[5]}px;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[4]}px;\n`;\nexport const Title = styled.h3`\n  margin-bottom: ${p => p.theme.space[3]}px; ;\n`;\n","import { getReviewsById } from '../../service/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Title, Item, List } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    async function fetchReviewsById(movieId) {\n      try {\n        const data = await getReviewsById(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        error.message('..We have a problem');\n      }\n    }\n\n    fetchReviewsById(movieId);\n  }, [movieId]);\n\n  if (!reviews) {\n    return;\n  }\n  return reviews.length === 0 ? (\n    <p>We don`t have any reviews for this movie</p>\n  ) : (\n    <List>\n      {reviews.map(({ author, content, id }) => {\n        return (\n          <Item key={id}>\n            <Title>Author: {author}</Title>\n            <p>{content}</p>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst KEY = '47bf952bf58b26c55c9961725433383a';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: KEY,\n};\n// Trending movies list\nexport async function getTrendingMovies() {\n  const res = await axios.get('/trending/movie/day');\n\n  return res.data;\n}\n// Movies list by search query\nexport async function getMoviesByQuery(query) {\n  const res = await axios.get(`search/movie?query=${query}`);\n\n  return res.data;\n}\n\n// Movie by id\nexport async function getMovieById(movieId) {\n  const res = await axios.get(`/movie/${movieId}`);\n\n  return res.data;\n}\n// get cast list\nexport async function getCastListById(movieId) {\n  const res = await axios.get(`/movie/${movieId}/credits`);\n\n  return res.data;\n}\n\n// get reviews\nexport async function getReviewsById(movieId) {\n  const res = await axios.get(`/movie/${movieId}/reviews`);\n\n  return res.data;\n}\n"],"names":["List","styled","p","theme","space","Item","Title","movieId","useParams","useState","reviews","setReviews","useEffect","getReviewsById","data","results","message","fetchReviewsById","length","map","author","content","id","getTrendingMovies","axios","res","getMoviesByQuery","query","getMovieById","getCastListById","api_key"],"sourceRoot":""}