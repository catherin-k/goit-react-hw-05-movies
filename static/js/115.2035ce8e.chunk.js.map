{"version":3,"file":"static/js/115.2035ce8e.chunk.js","mappings":"6RAEaA,EAAOC,EAAAA,GAAAA,GAAH,iDACE,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MAGzBC,EAAOJ,EAAAA,GAAAA,EAAH,oEACJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MACb,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,M,SCsCtC,EAxCa,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAeA,IAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAAiCL,GAAjC,iGAEuBM,EAAAA,EAAAA,IAAgBN,GAFvC,OAEUO,EAFV,OAGIH,EAAQG,EAAKJ,MAHjB,gDAKI,KAAMK,QAAQ,uBALlB,yDADc,yBAAC,SAAD,2BAUdC,CAAkBT,KACjB,CAACA,IAECG,EAIL,OACE,wBACGA,EAAKO,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAC1BC,EACa,OAAjBD,EACIE,EADJ,yCAEsCF,GAExC,OACE,UAACpB,EAAD,YACE,gBAAKuB,IAAKF,EAAOG,IAAKL,KACtB,SAACd,EAAD,UAAOc,KACP,UAACd,EAAD,yBAAkBa,OAHTD,U,0MC5Bd,SAAeQ,IAAtB,+B,aAAO,O,oBAAA,oGACaC,IAAAA,IAAU,uBADvB,cACCC,EADD,yBAGEA,EAAId,MAHN,kEAMA,SAAee,EAAtB,kC,aAAO,O,oBAAA,WAAgCC,GAAhC,uFACaH,IAAAA,IAAA,6BAAgCG,IAD7C,cACCF,EADD,yBAGEA,EAAId,MAHN,kEAOA,SAAeiB,EAAtB,kC,aAAO,O,oBAAA,WAA4BxB,GAA5B,uFACaoB,IAAAA,IAAA,iBAAoBpB,IADjC,cACCqB,EADD,yBAGEA,EAAId,MAHN,kEAMA,SAAeD,EAAtB,kC,aAAO,O,oBAAA,WAA+BN,GAA/B,uFACaoB,IAAAA,IAAA,iBAAoBpB,EAApB,aADb,cACCqB,EADD,yBAGEA,EAAId,MAHN,kEAOA,SAAekB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BzB,GAA9B,uFACaoB,IAAAA,IAAA,iBAAoBpB,EAApB,aADb,cACCqB,EADD,yBAGEA,EAAId,MAHN,kEA/BPa,IAAAA,SAAAA,QAAyB,gCACzBA,IAAAA,SAAAA,OAAwB,CACtBM,QAHU,qC","sources":["components/cast/Cast.styled.js","components/cast/Cast.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const Text = styled.p`\n  padding: ${p => p.theme.space[3]}px;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastListById } from '../../service/api';\nimport defaultImg from '../images/popcorn1.png';\nimport { Item, Text } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    async function fetchCastListById(movieId) {\n      try {\n        const data = await getCastListById(movieId);\n        setCast(data.cast);\n      } catch (error) {\n        error.message('..We have a problem');\n      }\n    }\n\n    fetchCastListById(movieId);\n  }, [movieId]);\n\n  if (!cast) {\n    return;\n  }\n\n  return (\n    <ul>\n      {cast.map(({ id, character, name, profile_path }) => {\n        const photo =\n          profile_path === null\n            ? defaultImg\n            : `https://image.tmdb.org/t/p/w300${profile_path}`;\n\n        return (\n          <Item key={id}>\n            <img src={photo} alt={name} />\n            <Text>{name}</Text>\n            <Text>Character: {character}</Text>\n          </Item>\n        );\n      })}\n    </ul>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst KEY = '47bf952bf58b26c55c9961725433383a';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: KEY,\n};\n// Trending movies list\nexport async function getTrendingMovies() {\n  const res = await axios.get('/trending/movie/day');\n\n  return res.data;\n}\n// Movies list by search query\nexport async function getMoviesByQuery(query) {\n  const res = await axios.get(`search/movie?query=${query}`);\n\n  return res.data;\n}\n\n// Movie by id\nexport async function getMovieById(movieId) {\n  const res = await axios.get(`/movie/${movieId}`);\n\n  return res.data;\n}\n// get cast list\nexport async function getCastListById(movieId) {\n  const res = await axios.get(`/movie/${movieId}/credits`);\n\n  return res.data;\n}\n\n// get reviews\nexport async function getReviewsById(movieId) {\n  const res = await axios.get(`/movie/${movieId}/reviews`);\n\n  return res.data;\n}\n"],"names":["Item","styled","p","theme","space","Text","movieId","useParams","useState","cast","setCast","useEffect","getCastListById","data","message","fetchCastListById","map","id","character","name","profile_path","photo","defaultImg","src","alt","getTrendingMovies","axios","res","getMoviesByQuery","query","getMovieById","getReviewsById","api_key"],"sourceRoot":""}